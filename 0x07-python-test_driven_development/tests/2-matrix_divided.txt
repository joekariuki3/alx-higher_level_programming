>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [ [1, 2, 3], [4, 5, 6], ]
>>> matrix_1 = [ [1, 2, 3], [4, 5, 6], [7, 8] ]
>>> matrix_2 = [ [1, 2, 3], [4, 5, "hello"], ]
>>> matrix_3 = [[]]
>>> matrix_4 = "hello"

test with all correct values of matrix and corrct div
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test with correct matrix and div as 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	    ...
ZeroDivisionError: division by zero

test with correct matrix and div as string
>>> matrix_divided(matrix, "hello")
Traceback (most recent call last):
	    ...
TypeError: div must be a number

test with one row of matrix having small length compared to others
>>> matrix_divided(matrix_1, 3)
Traceback (most recent call last):
	    ...
TypeError: Each row of the matrix must have the same size

test with one value of the matrix being a string
>>> matrix_divided(matrix_2, 3)
Traceback (most recent call last):
	    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

test an empty list
>>> matrix_divided(matrix_3, 3)
Traceback (most recent call last):
	    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

test if matrix is a string
>>> matrix_divided(matrix_4, 3)
Traceback (most recent call last):
	    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
